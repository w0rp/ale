"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const Parser_1 = require("../../Parser");
const lexer_1 = require("../../../lexer");
const Parser_spec_1 = require("../Parser.spec");
describe('stop statement', () => {
    it('cannot be used as a local variable', () => {
        let { statements, diagnostics } = Parser_1.Parser.parse([
            Parser_spec_1.token(lexer_1.TokenKind.Stop, 'stop'),
            Parser_spec_1.token(lexer_1.TokenKind.Equal, '='),
            Parser_spec_1.token(lexer_1.TokenKind.True, 'true'),
            Parser_spec_1.EOF
        ]);
        //should be an error
        chai_1.expect(diagnostics).to.be.lengthOf(1);
        chai_1.expect(statements).to.exist;
        chai_1.expect(statements).not.to.be.null;
    });
    it('is valid as a statement', () => {
        let { diagnostics } = Parser_1.Parser.parse([Parser_spec_1.token(lexer_1.TokenKind.Stop, 'stop'), Parser_spec_1.EOF]);
        chai_1.expect(diagnostics[0]).to.be.undefined;
    });
    it('can be used as an object property', () => {
        let { tokens } = lexer_1.Lexer.scan(`
            sub Main()
                theObject = {
                    stop: false
                }
                theObject.stop = true
            end sub
        `);
        let { diagnostics } = Parser_1.Parser.parse(tokens);
        chai_1.expect(diagnostics.length).to.equal(0);
    });
});
//# sourceMappingURL=Stop.spec.js.map