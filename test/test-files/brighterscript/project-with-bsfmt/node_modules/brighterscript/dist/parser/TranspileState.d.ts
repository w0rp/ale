import { SourceNode } from 'source-map';
import type { Range } from 'vscode-languageserver';
import type { BrsFile } from '../files/BrsFile';
import type { ClassStatement } from './Statement';
/**
 * Holds the state of a transpile operation as it works its way through the transpile process
 */
export declare class TranspileState {
    constructor(file: BrsFile);
    /**
     * The BrsFile that is currently being transpiled
     */
    file: BrsFile;
    /**
     * The absolute path to the source location of this file. If sourceRoot is specified,
     * this path will be full path to the file in sourceRoot instead of rootDir.
     * If the file resides outside of rootDir, then no changes will be made to this path.
     */
    pathAbsolute: string;
    /**
     * The number of active parent blocks for the current location of the state.
     */
    blockDepth: number;
    /**
     * the tree of parents, with the first index being direct parent, and the last index being the furthest removed ancestor.
     * Used to assist blocks in knowing when to add a comment statement to the same line as the first line of the parent
     */
    lineage: {
        range: Range;
    }[];
    /**
     * Used by ClassMethodStatements to determine information about their enclosing class
     */
    classStatement?: ClassStatement;
    /**
     * Append whitespace until we reach the current blockDepth amount
     * @param blockDepthChange - if provided, change the block depth before indenting
     */
    indent(blockDepthChange?: number): string;
    newline(): string;
    /**
     * Shorthand for creating a new source node
     */
    sourceNode(locatable: {
        range: Range;
    }, code: string): string | SourceNode;
}
