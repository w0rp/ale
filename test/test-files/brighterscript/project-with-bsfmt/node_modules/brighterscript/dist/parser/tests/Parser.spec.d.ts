import type { Token } from '../../lexer';
import { TokenKind } from '../../lexer';
/**
 * Creates a token with the given `kind` and (optional) `literal` value.
 * @param {TokenKind} kind the tokenKind the produced token should represent.
 * @param {string} text the text represented by this token.
 * @param {*} [literal] the literal value that the produced token should contain, if any
 * @returns {object} a token of `kind` representing `text` with value `literal`.
 */
export declare function token(kind: TokenKind, text?: string): Token;
/**
 * Creates an Identifier token with the given `text`.
 * @param {string} text
 * @returns {object} a token with the provided `text`.
 */
export declare function identifier(text: any): any;
/** An end-of-file token. */
export declare const EOF: Token;
