"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
Object.defineProperty(exports, "__esModule", { value: true });
var RokuDeploy_1 = require("./RokuDeploy");
//export everything from the RokuDeploy file
__export(require("./RokuDeploy"));
__export(require("./util"));
//create a new static instance of RokuDeploy, and export those functions for backwards compatibility
var rokuDeploy = new RokuDeploy_1.RokuDeploy();
var createPackage = RokuDeploy_1.RokuDeploy.prototype.createPackage.bind(rokuDeploy);
exports.createPackage = createPackage;
var deleteInstalledChannel = RokuDeploy_1.RokuDeploy.prototype.deleteInstalledChannel.bind(rokuDeploy);
exports.deleteInstalledChannel = deleteInstalledChannel;
var deploy = RokuDeploy_1.RokuDeploy.prototype.deploy.bind(rokuDeploy);
exports.deploy = deploy;
var deployAndSignPackage = RokuDeploy_1.RokuDeploy.prototype.deployAndSignPackage.bind(rokuDeploy);
exports.deployAndSignPackage = deployAndSignPackage;
var getDeviceInfo = RokuDeploy_1.RokuDeploy.prototype.getDeviceInfo.bind(rokuDeploy);
exports.getDeviceInfo = getDeviceInfo;
var getDestPath = RokuDeploy_1.RokuDeploy.prototype.getDestPath.bind(rokuDeploy);
exports.getDestPath = getDestPath;
var getFilePaths = RokuDeploy_1.RokuDeploy.prototype.getFilePaths.bind(rokuDeploy);
exports.getFilePaths = getFilePaths;
var getOptions = RokuDeploy_1.RokuDeploy.prototype.getOptions.bind(rokuDeploy);
exports.getOptions = getOptions;
var getOutputPkgFilePath = RokuDeploy_1.RokuDeploy.prototype.getOutputPkgFilePath.bind(rokuDeploy);
exports.getOutputPkgFilePath = getOutputPkgFilePath;
var getOutputZipFilePath = RokuDeploy_1.RokuDeploy.prototype.getOutputZipFilePath.bind(rokuDeploy);
exports.getOutputZipFilePath = getOutputZipFilePath;
var normalizeFilesArray = RokuDeploy_1.RokuDeploy.prototype.normalizeFilesArray.bind(rokuDeploy);
exports.normalizeFilesArray = normalizeFilesArray;
var normalizeRootDir = RokuDeploy_1.RokuDeploy.prototype.normalizeRootDir.bind(rokuDeploy);
exports.normalizeRootDir = normalizeRootDir;
var parseManifest = RokuDeploy_1.RokuDeploy.prototype.parseManifest.bind(rokuDeploy);
exports.parseManifest = parseManifest;
var prepublishToStaging = RokuDeploy_1.RokuDeploy.prototype.prepublishToStaging.bind(rokuDeploy);
exports.prepublishToStaging = prepublishToStaging;
var pressHomeButton = RokuDeploy_1.RokuDeploy.prototype.pressHomeButton.bind(rokuDeploy);
exports.pressHomeButton = pressHomeButton;
var publish = RokuDeploy_1.RokuDeploy.prototype.publish.bind(rokuDeploy);
exports.publish = publish;
var rekeyDevice = RokuDeploy_1.RokuDeploy.prototype.rekeyDevice.bind(rokuDeploy);
exports.rekeyDevice = rekeyDevice;
var retrieveSignedPackage = RokuDeploy_1.RokuDeploy.prototype.retrieveSignedPackage.bind(rokuDeploy);
exports.retrieveSignedPackage = retrieveSignedPackage;
var signExistingPackage = RokuDeploy_1.RokuDeploy.prototype.signExistingPackage.bind(rokuDeploy);
exports.signExistingPackage = signExistingPackage;
var stringifyManifest = RokuDeploy_1.RokuDeploy.prototype.stringifyManifest.bind(rokuDeploy);
exports.stringifyManifest = stringifyManifest;
var zipFolder = RokuDeploy_1.RokuDeploy.prototype.zipFolder.bind(rokuDeploy);
exports.zipFolder = zipFolder;
var zipPackage = RokuDeploy_1.RokuDeploy.prototype.zipPackage.bind(rokuDeploy);
exports.zipPackage = zipPackage;
//# sourceMappingURL=index.js.map